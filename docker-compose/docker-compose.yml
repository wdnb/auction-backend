version: "3"
services:

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_mysql
    command: --log-bin --binlog-format=row
    ports:
      - "3306:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
      - ${MYSQL_LOG_DIR}:/var/log/mysql/:rw
#    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_ROOT_HOST: "${MYSQL_ROOT_HOST}"
      TZ: "$TZ"

  mongodb:
    image: mongo:6.0.5-jammy
    container_name: ${COMPOSE_PROJECT_NAME}-mongodb
#    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodata:/data/db
    ports:
      - "27017:27017"
    networks:
      - default

  mongo-express:
    image: mongo-express:latest
    container_name: ${COMPOSE_PROJECT_NAME}-mongo-express
#    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGODB_INITDB_ROOT_USERNAME}:${MONGODB_INITDB_ROOT_PASSWORD}@mongodb:27017/
    networks:
      - default

  redis:
    image: redis:${REDIS7_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    ports:
      - "${REDIS7_HOST_PORT}:6379"
    volumes:
      - ${REDIS7_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
      - ${REDIS7_ACL_FILE}:/etc/redis/users.acl
    #restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      - TZ="$TZ"
    networks:
      - default


  # NSQ ################################################
  nsqlookupd:
    image: ${NSQ_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-nsqlookupd
    command: /nsqlookupd
    ports:
      - "4160:4160"
      - "4161:4161"
    networks:
      - default

  nsqd:
    image: ${NSQ_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-nsqd
    #    2天=172800s
    command: /nsqd --lookupd-tcp-address=nsqlookupd:4160
    depends_on:
      - nsqlookupd
    ports:
      - "4150:4150"
      - "4151:4151"
    volumes:
      - ${DATA_DIR}/nsqd_data:/data
    networks:
      - default

  nsqadmin:
    image: ${NSQ_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-nsqadmin
    command: /nsqadmin --lookupd-http-address=nsqlookupd:4161
    depends_on:
      - nsqlookupd
    ports:
      - "4171:4171"
    networks:
      - default

# Portainer ################################################
  portainer:
    image:  portainer/portainer
    container_name: ${COMPOSE_PROJECT_NAME}-portainer
    volumes:
      - ${DATA_DIR}/portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    ports:
      - "9000:9000"
    networks:
      - default

#  auction-backend:
#    build: ${SOURCE_DIR}
#    container_name: ${COMPOSE_PROJECT_NAME}-auction-backend
#    volumes:
#      - ./logs/auction-website:/var/log/auction-website/:rw
#    restart: always
#    environment:
#      - ENV_VAR=value
#    depends_on:
#      - mysql
#      - redis
#      - nsqd
#      - nsqlookupd
#    ports:
#      - "8080:8080"
#    networks:
#      - default

#air 开发模式热加载代码
  air:
    build:
      context: services/air
      # Correct the path to your Dockerfile
#      dockerfile: services/air/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-air
    # working_dir value has to be the same of mapped volume
    working_dir: /app
    ports:
      - "8080:8080"
    volumes:
      - ${SOURCE_DIR}:/app
      - ${LOG_DIR}/auction-website:/var/log/auction-website/:rw
    networks:
      - default


networks:
  default:
    driver: bridge
    ipam:
      driver: default
      # 解除下面的注释可以设置网段，用于nginx等容器固定容器IP
      #config:
      #  - subnet: 10.0.0.0/24

volumes:
  mongodata: